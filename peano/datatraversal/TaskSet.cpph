#include "tarch/Assertions.h"

#include "peano/performanceanalysis/Analysis.h"


template <class Functor>
peano::datatraversal::TaskSet::TaskSet(
  Functor&  myTask
) {
  peano::performanceanalysis::Analysis::getInstance().fireAndForgetBackgroundTask(1);

  #if defined(SharedTBB)
    typedef GenericTaskWithCopy<Functor> Task;

    Task* tbbTask = new(tbb::task::allocate_root(_backgroundTaskContext)) Task(myTask);

    tbb::task::enqueue(*tbbTask);
  /* Will not correctly launch background task */
  // #elif defined(SharedOMP)
  //   #pragma omp parallel
  //   #pragma omp single
  //   {
  //     #pragma omp task
  //     myTask();
  //   }
  #else
  myTask();
  #endif
}


#ifdef SharedTBB
template <class Functor>
peano::datatraversal::TaskSet::GenericTaskWithCopy<Functor>::GenericTaskWithCopy(const Functor&  functor):
  _functor(functor)  {
}


template <class Functor>
tbb::task* peano::datatraversal::TaskSet::GenericTaskWithCopy<Functor>::execute() {
  _functor();
  return 0;
}
#endif
