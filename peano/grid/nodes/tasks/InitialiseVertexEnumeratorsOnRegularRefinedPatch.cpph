template <class Vertex, class Cell>
tarch::logging::Log  peano::spacetreegrid::nodes::tasks::InitialiseVertexEnumeratorsOnRegularRefinedPatch<Vertex,Cell>::_log( "peano::spacetreegrid::nodes::tasks::InitialiseVertexEnumeratorsOnRegularRefinedPatch" );


template <class Vertex, class Cell>
peano::spacetreegrid::nodes::tasks::InitialiseVertexEnumeratorsOnRegularRefinedPatch<Vertex,Cell>::InitialiseVertexEnumeratorsOnRegularRefinedPatch(
  const SingleLevelEnumerator&                                      fineGridVerticesEnumerator,
  peano::spacetreegrid::RegularGridContainer<Vertex,Cell>&  regularGridContainer
):
  _fineGridVerticesEnumerator(fineGridVerticesEnumerator),
  _regularGridContainer(regularGridContainer) {
}


template <class Vertex, class Cell>
void peano::spacetreegrid::nodes::tasks::InitialiseVertexEnumeratorsOnRegularRefinedPatch<Vertex,Cell>::operator()() {
  logTraceInWith1Argument( "initialiseVertexEnumerators(...)", _fineGridVerticesEnumerator.toString() );

  const int TreeDepth = _fineGridVerticesEnumerator.getCellFlags();
  for (int i=0; i<=TreeDepth; i++) {
    _regularGridContainer.setVertexEnumerator(
      i,
      UnrolledLevelEnumerator(
        _fineGridVerticesEnumerator.getCellSize(),
        _fineGridVerticesEnumerator.getVertexPosition(),
        _fineGridVerticesEnumerator.getLevel(),
        TreeDepth,
        i
      )
    );
  }

  logTraceOut( "initialiseVertexEnumerators(...)" );
}
