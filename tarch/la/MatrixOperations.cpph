template<int Rows, int Cols, typename Scalar>
tarch::la::Matrix<Cols,Rows,Scalar> tarch::la::transpose(const tarch::la::Matrix<Rows,Cols,Scalar>& matrix) {
  tarch::la::Matrix<Cols,Rows,Scalar> result;
  #ifdef CompilerICC
  #pragma ivdep
  #pragma simd
  #endif
  for (int i=0; i < Rows; i++) {
    for (int j=0; j < Cols; j++) {
      result(j,i) += matrix(i,j);
    }
  }
  return result;
}



template<int Rows, int Cols, typename Scalar>
Scalar tarch::la::sum(const tarch::la::Matrix<Rows,Cols,Scalar>& matrix) {
  Scalar result = 0;
  for (int i=0; i < Rows; i++) {
    for (int j=0; j < Cols; j++) {
      result += matrix(i,j);
    }
  }
  return result;
}



template<int Rows, int Cols, typename Scalar>
std::ostream& operator<< (
  std::ostream& os,
  const tarch::la::Matrix<Rows,Cols,Scalar>& matrix
) {
  os << matrix.toString();
  return os;
}
